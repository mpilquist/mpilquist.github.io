<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fp on mpilquist</title>
    <link>https://mpilquist.github.io/tags/fp/</link>
    <description>Recent content in fp on mpilquist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2012 - 2021 Michael Pilquist</copyright>
    <lastBuildDate>Sat, 09 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mpilquist.github.io/tags/fp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intro to Scala 3 via 8 Queens</title>
      <link>https://mpilquist.github.io/blog/2021/01/09/intro-to-scala-3-via-8-queens/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2021/01/09/intro-to-scala-3-via-8-queens/</guid>
      <description>Published on GitHub here: https://github.com/mpilquist/8queens#readme</description>
    </item>
    
    <item>
      <title>Small Data Science with Typelevel Libraries</title>
      <link>https://mpilquist.github.io/blog/2021/01/03/small-data-science-with-typelevel-libraries/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2021/01/03/small-data-science-with-typelevel-libraries/</guid>
      <description>Published on GitHub here: https://github.com/mpilquist/strava-summary#readme</description>
    </item>
    
    <item>
      <title>The Future of Typelevel Concurrency</title>
      <link>https://mpilquist.github.io/blog/2020/11/25/cats-effect/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2020/11/25/cats-effect/</guid>
      <description>&lt;p&gt;Talk given at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xEkSDiz3XO0&amp;amp;t=6s&#34;&gt;Scala In The City&lt;/a&gt; on 2020-11-25&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J_9DjHMCPKM&amp;amp;t=149s&#34;&gt;PHASE&lt;/a&gt; on 2021-02-25&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slides available on &lt;a href=&#34;https://speakerdeck.com/mpilquist/the-future-of-typelevel-concurrency&#34;&gt;SpeakerDeck&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scodec for Scala 3</title>
      <link>https://mpilquist.github.io/blog/2020/04/18/scodec/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2020/04/18/scodec/</guid>
      <description>&lt;p&gt;Talk given at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UMsrLyvEobs&#34;&gt;Scala Love&lt;/a&gt; on 2020-04-18&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2eTwf78FJmc&#34;&gt;YOW! LambdaJam 2020&lt;/a&gt; on 2020-07-21&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slides available on &lt;a href=&#34;https://speakerdeck.com/mpilquist/scodec-for-scala-3-yow-lambdajam-2020&#34;&gt;SpeakerDeck&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inference Driven Design</title>
      <link>https://mpilquist.github.io/blog/2018/07/04/fs2/</link>
      <pubDate>Wed, 04 Jul 2018 15:24:47 -0400</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2018/07/04/fs2/</guid>
      <description>&lt;p&gt;Design is an exercise in balancing tradeoffs of various constraints. In this post, we&amp;rsquo;ll look at a library design issue faced in &lt;a href=&#34;https://github.com/functional-streams-for-scala/fs2&#34;&gt;FS2&lt;/a&gt; and how constraints like Scala&amp;rsquo;s type inference algorithm, minimization of explicit type annotations, and invariance under refactoring can be balanced.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stackless Function Composition</title>
      <link>https://mpilquist.github.io/blog/2017/03/11/stackless-function-composition/</link>
      <pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2017/03/11/stackless-function-composition/</guid>
      <description>&lt;p&gt;Last fall I spent a lot of time optimizing the internals of &lt;a href=&#34;https://github.com/functional-streams-for-scala/fs2&#34;&gt;FS2&lt;/a&gt;. The &lt;code&gt;Free&lt;/code&gt; monad is used extensively in FS2 for modeling various algebras &amp;ndash; most notably, an algebra supporting &lt;code&gt;Stream&lt;/code&gt; and an algebra supporting &lt;code&gt;Pull&lt;/code&gt;. Almost any operation a user performs on a &lt;code&gt;Stream&lt;/code&gt; or &lt;code&gt;Pull&lt;/code&gt; results in one or more bounces on the trampoline inside &lt;code&gt;Free&lt;/code&gt;. As such, any optimization in &lt;code&gt;Free&lt;/code&gt; pays off big time. In this article, we&amp;rsquo;ll look at one of these optimizations &amp;ndash; &lt;em&gt;map fusion&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compositional Streaming with FS2</title>
      <link>https://mpilquist.github.io/blog/2016/11/13/fs2/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2016/11/13/fs2/</guid>
      <description>&lt;p&gt;Talk given at &lt;a href=&#34;http://scala.bythebay.io&#34;&gt;Scalae By The Bay 2016&lt;/a&gt;. Slides available on &lt;a href=&#34;https://speakerdeck.com/mpilquist/compositional-streaming-with-fs2&#34;&gt;SpeakerDeck&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Intro to Functional Streams for Scala (FS2)</title>
      <link>https://mpilquist.github.io/blog/2016/05/20/fs2/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2016/05/20/fs2/</guid>
      <description>&lt;p&gt;Informal talk series that introduces Functional Streams for Scala (FS2).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>From Simulacrum to Typeclassic</title>
      <link>https://mpilquist.github.io/blog/2016/03/02/simulacrum/</link>
      <pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2016/03/02/simulacrum/</guid>
      <description>&lt;p&gt;Talk given at the &lt;a href=&#34;http://typelevel.org/event/2016-03-summit-philadelphia/&#34;&gt;Typelevel Summit Philadelphia&lt;/a&gt;. Slides available on &lt;a href=&#34;https://speakerdeck.com/mpilquist/from-simulacrum-to-typeclassic&#34;&gt;SpeakerDeck&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Tour of Functional Structures via Scodec and Simulacrum</title>
      <link>https://mpilquist.github.io/blog/2015/08/14/sbtb/</link>
      <pubDate>Fri, 14 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2015/08/14/sbtb/</guid>
      <description>&lt;p&gt;Talk given at &lt;a href=&#34;http://scala.bythebay.io&#34;&gt;Scala By The Bay 2015&lt;/a&gt;. Slides available on &lt;a href=&#34;https://speakerdeck.com/mpilquist/a-tour-of-functional-structures-via-scodec-and-simulacrum&#34;&gt;SpeakerDeck&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Invariant Shadows - Part 2: Monoidals</title>
      <link>https://mpilquist.github.io/blog/2015/06/22/invariant-shadows-part-2/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2015/06/22/invariant-shadows-part-2/</guid>
      <description>In the last post, we built type classes for a subset of invariant functors &amp;ndash; namely, type classes that drew inspiration from the covariant FlatMap and Monad. In this article, we&amp;rsquo;ll explore invariant shadows of the type classes supporting applicative functors.
Disclaimer: I am not a category theorist, and in both the previous article and this article, I use fairly loose reasoning to explore these type classes. Corrections are welcome.</description>
    </item>
    
    <item>
      <title>Invariant Shadows</title>
      <link>https://mpilquist.github.io/blog/2015/06/18/invariant-shadows/</link>
      <pubDate>Thu, 18 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2015/06/18/invariant-shadows/</guid>
      <description>A common use case when working with binary protocols is decoding a value and then using the decoded value to determine how to decode the remaining bits. For example, consider a simple framing structure, made up of a 2-byte big endian unsigned integer field followed by n bytes, where n is the value in the first field. In order to decode this structure, we need to first decode the 2-byte size field, then use the decoded size to take that number of bytes from the remainder.</description>
    </item>
    
    <item>
      <title>Functional Structures in Scala Screencast Series</title>
      <link>https://mpilquist.github.io/blog/2015/04/22/functional-structures/</link>
      <pubDate>Wed, 22 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://mpilquist.github.io/blog/2015/04/22/functional-structures/</guid>
      <description>&lt;p&gt;Informal talk series that presents the major functional programming type classes in Scala.&lt;/p&gt;
&lt;p&gt;Talks are intended to complement the fantastic Functional Programming in Scala by Paul Chiusano and RÃºnar Bjarnason (&lt;a href=&#34;http://www.manning.com/bjarnason/)&#34;&gt;http://www.manning.com/bjarnason/)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Given the informal nature of the talks, there are mistakes. Errata will be posted on each talk in the descriptions.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
